name: Deploy to Firebase

on:
    push:
        branches:
            - master

jobs:
    build:
        name: Build and Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set environment variables
              run: |
                  echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> $GITHUB_ENV
                  echo "BASE_DIR=${{ secrets.BASE_DIR }}" >> $GITHUB_ENV
                  echo "GOOGLE_APPLICATION_CREDENTIALS_BASE64=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" >> $GITHUB_ENV
                  echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" >> $GITHUB_ENV
                  echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
                  echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
                  echo "FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}" >> $GITHUB_ENV
                  echo "FIREBASE_SERVICE_ACCOUNT_BASE64=${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}" >> $GITHUB_ENV
                  echo "SURFSHARK_PROXY_USERNAME=${{ secrets.SURFSHARK_PROXY_USERNAME }}" >> $GITHUB_ENV
                  echo "SURFSHARK_PROXY_PASSWORD=${{ secrets.SURFSHARK_PROXY_PASSWORD }}" >> $GITHUB_ENV

            - name: Decode Firebase service account key
              run: echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/firebase-key.json

            - name: Decode Google service account key
              run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/google-credentials.json

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '22' # Adjust to your desired Node.js version

            - name: Install NPM dependencies
              run: npm install -g firebase-tools@13.13.1 # Install globally for firebase command access

            - name: Install OpenVPN
              run: |
                  sudo apt-get update
                  sudo apt install -y openvpn openvpn-systemd-resolved resolvconf easy-rsa

            - name: Install dependencies
              run: |
                  sudo apt-get install python3-pip -y
                  pip3 install -r requirements.txt

            - name: Set up OpenVPN configuration
              run: |
                  sudo mkdir -p /etc/openvpn
                  echo '
                  client
                  dev tun
                  proto udp
                  remote nl-ams.prod.surfshark.com 1194
                  remote-random
                  nobind
                  tun-mtu 1500
                  mssfix 1450
                  ping 15
                  ping-restart 0
                  reneg-sec 0

                  remote-cert-tls server

                  auth-user-pass /etc/openvpn/credentials.txt

                  #comp-lzo
                  verb 3
                  fast-io
                  cipher AES-256-CBC

                  auth SHA512

                  <ca>
                  -----BEGIN CERTIFICATE-----
                  MIIFTTCCAzWgAwIBAgIJAMs9S3fqwv+mMA0GCSqGSIb3DQEBCwUAMD0xCzAJBgNV
                  BAYTAlZHMRIwEAYDVQQKDAlTdXJmc2hhcmsxGjAYBgNVBAMMEVN1cmZzaGFyayBS
                  b290IENBMB4XDTE4MDMxNDA4NTkyM1oXDTI4MDMxMTA4NTkyM1owPTELMAkGA1UE
                  BhMCVkcxEjAQBgNVBAoMCVN1cmZzaGFyazEaMBgGA1UEAwwRU3VyZnNoYXJrIFJv
                  b3QgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDEGMNj0aisM63o
                  SkmVJyZPaYX7aPsZtzsxo6m6p5Wta3MGASoryRsBuRaH6VVa0fwbI1nw5ubyxkua
                  Na4v3zHVwuSq6F1p8S811+1YP1av+jqDcMyojH0ujZSHIcb/i5LtaHNXBQ3qN48C
                  c7sqBnTIIFpmb5HthQ/4pW+a82b1guM5dZHsh7q+LKQDIGmvtMtO1+NEnmj81BAp
                  FayiaD1ggvwDI4x7o/Y3ksfWSCHnqXGyqzSFLh8QuQrTmWUm84YHGFxoI1/8AKdI
                  yVoB6BjcaMKtKs/pbctk6vkzmYf0XmGovDKPQF6MwUekchLjB5gSBNnptSQ9kNgn
                  TLqi0OpSwI6ixX52Ksva6UM8P01ZIhWZ6ua/T/tArgODy5JZMW+pQ1A6L0b7egIe
                  ghpwKnPRG+5CzgO0J5UE6gv000mqbmC3CbiS8xi2xuNgruAyY2hUOoV9/BuBev8t
                  tE5ZCsJH3YlG6NtbZ9hPc61GiBSx8NJnX5QHyCnfic/X87eST/amZsZCAOJ5v4EP
                  SaKrItt+HrEFWZQIq4fJmHJNNbYvWzCE08AL+5/6Z+lxb/Bm3dapx2zdit3x2e+m
                  iGHekuiE8lQWD0rXD4+T+nDRi3X+kyt8Ex/8qRiUfrisrSHFzVMRungIMGdO9O/z
                  CINFrb7wahm4PqU2f12Z9TRCOTXciQIDAQABo1AwTjAdBgNVHQ4EFgQUYRpbQwyD
                  ahLMN3F2ony3+UqOYOgwHwYDVR0jBBgwFoAUYRpbQwyDahLMN3F2ony3+UqOYOgw
                  DAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAn9zV7F/XVnFNZhHFrt0Z
                  S1Yqz+qM9CojLmiyblMFh0p7t+Hh+VKVgMwrz0LwDH4UsOosXA28eJPmech6/bjf
                  ymkoXISy/NUSTFpUChGO9RabGGxJsT4dugOw9MPaIVZffny4qYOc/rXDXDSfF2b+
                  303lLPI43y9qoe0oyZ1vtk/UKG75FkWfFUogGNbpOkuz+et5Y0aIEiyg0yh6/l5Q
                  5h8+yom0HZnREHhqieGbkaGKLkyu7zQ4D4tRK/mBhd8nv+09GtPEG+D5LPbabFVx
                  KjBMP4Vp24WuSUOqcGSsURHevawPVBfgmsxf1UCjelaIwngdh6WfNCRXa5QQPQTK
                  ubQvkvXONCDdhmdXQccnRX1nJWhPYi0onffvjsWUfztRypsKzX4dvM9k7xnIcGSG
                  EnCC4RCgt1UiZIj7frcCMssbA6vJ9naM0s7JF7N3VKeHJtqe1OCRHMYnWUZt9vrq
                  X6IoIHlZCoLlv39wFW9QNxelcAOCVbD+19MZ0ZXt7LitjIqe7yF5WxDQN4xru087
                  FzQ4Hfj7eH1SNLLyKZkA1eecjmRoi/OoqAt7afSnwtQLtMUc2bQDg6rHt5C0e4dC
                  LqP/9PGZTSJiwmtRHJ/N5qYWIh9ju83APvLm/AGBTR2pXmj9G3KdVOkpIC7L35dI
                  623cSEC3Q3UZutsEm/UplsM=
                  -----END CERTIFICATE-----
                  </ca>
                  key-direction 1
                  <tls-auth>
                  #
                  # 2048 bit OpenVPN static key
                  #
                  -----BEGIN OpenVPN Static key V1-----
                  b02cb1d7c6fee5d4f89b8de72b51a8d0
                  c7b282631d6fc19be1df6ebae9e2779e
                  6d9f097058a31c97f57f0c35526a44ae
                  09a01d1284b50b954d9246725a1ead1f
                  f224a102ed9ab3da0152a15525643b2e
                  ee226c37041dc55539d475183b889a10
                  e18bb94f079a4a49888da566b9978346
                  0ece01daaf93548beea6c827d9674897
                  e7279ff1a19cb092659e8c1860fbad0d
                  b4ad0ad5732f1af4655dbd66214e552f
                  04ed8fd0104e1d4bf99c249ac229ce16
                  9d9ba22068c6c0ab742424760911d463
                  6aafb4b85f0c952a9ce4275bc821391a
                  a65fcd0d2394f006e3fba0fd34c4bc4a
                  b260f4b45dec3285875589c97d3087c9
                  134d3a3aa2f904512e85aa2dc2202498
                  -----END OpenVPN Static key V1-----
                  </tls-auth>
                  ' | sudo tee /etc/openvpn/surfshark.conf > /dev/null

            - name: Add Surfshark credentials
              run: |
                  echo "${{ secrets.SURFSHARK_PROXY_USERNAME }}" | sudo tee /etc/openvpn/credentials.txt > /dev/null
                  echo "${{ secrets.SURFSHARK_PROXY_PASSWORD }}" | sudo tee -a /etc/openvpn/credentials.txt > /dev/null
                  sudo chmod 600 /etc/openvpn/credentials.txt

            - name: Connect to VPN
              run: |
                  sudo openvpn --config /etc/openvpn/surfshark.conf --daemon
                  sleep 15 # Wait for VPN connection to establish

            - name: Ensure VPN is connected
              run: |
                  ifconfig tun0 # Check if tun0 interface is up
                  curl -s ifconfig.me # Check public IP address

            - name: Ensure BASE_DIR exists
              run: mkdir -p ${{ secrets.BASE_DIR }}

            - name: Run Python script in/in-new.py
              run: |
                  python3 in/in-new.py
              env:
                  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
                  BASE_DIR: ${{ secrets.BASE_DIR }}
                  GOOGLE_APPLICATION_CREDENTIALS: $GITHUB_WORKSPACE/google-credentials.json
                  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  MONGO_URI: ${{ secrets.MONGO_URI }}

            - name: Run Python script rw/main.py
              run: |
                  python3 rw/main.py
              env:
                  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
                  BASE_DIR: ${{ secrets.BASE_DIR }}
                  GOOGLE_APPLICATION_CREDENTIALS: $GITHUB_WORKSPACE/google-credentials.json
                  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  MONGO_URI: ${{ secrets.MONGO_URI }}

            - name: Deploy to Firebase
              uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                  repoToken: ${{ secrets.GITHUB_TOKEN }}
                  firebaseServiceAccount: $GITHUB_WORKSPACE/firebase-key.json
                  channelId: live
                  projectId: auto-cryptoskopen-1 # Replace with your project ID
                  expires: 7d
                  entryPoint: ${{ secrets.BASE_DIR }}
