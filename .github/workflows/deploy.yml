name: Deploy to Firebase

on:
    push:
        branches:
            - master

jobs:
    build:
        name: Build and Deploy
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set environment variables
              run: |
                  echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> $GITHUB_ENV
                  echo "BASE_DIR=${{ secrets.BASE_DIR }}" >> $GITHUB_ENV
                  echo "GOOGLE_APPLICATION_CREDENTIALS_BASE64=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" >> $GITHUB_ENV
                  echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" >> $GITHUB_ENV
                  echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
                  echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> $GITHUB_ENV
                  echo "FIREBASE_TOKEN=${{ secrets.FIREBASE_TOKEN }}" >> $GITHUB_ENV
                  echo "FIREBASE_SERVICE_ACCOUNT_BASE64=${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}" >> $GITHUB_ENV
                  echo "SURFSHARK_PROXY_USERNAME=${{ secrets.SURFSHARK_PROXY_USERNAME }}" >> $GITHUB_ENV
                  echo "SURFSHARK_PROXY_PASSWORD=${{ secrets.SURFSHARK_PROXY_PASSWORD }}" >> $GITHUB_ENV
                  echo "JWT_USER_ID=${{ secrets.JWT_USER_ID }}" >> $GITHUB_ENV
                  echo "JWT_TOKEN=${{ secrets.JWT_TOKEN }}" >> $GITHUB_ENV
                  echo "PROXY_AUTH=${{ secrets.PROXY_AUTH }}" >> $GITHUB_ENV

            - name: Ensure BASE_DIR exists
              run: mkdir -p ${{ secrets.BASE_DIR }}

            - name: Decode Firebase service account key
              run: echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/firebase-key.json

            - name: Decode Google service account key
              run: echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}" | base64 --decode > $GITHUB_WORKSPACE/google-credentials.json

            - name: Get Runner IP
              run: |
                  echo "Fetching runner's public IP address..."
                  curl ifconfig.me

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '22' # Adjust to your desired Node.js version

            - name: Install NPM dependencies
              run: npm install -g firebase-tools@13.13.1 # Install globally for firebase command access

            - name: Apt-Get Install
              run: |
                  sudo apt-get update
                  sudo apt install -y python3-pip

            - name: Install PIP packets
              run: |
                  pip3 install -r requirements.txt

            - name: Run Python script in/in-oxy.py
              run: |
                  python3 in/in-oxy.py
              env:
                  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
                  BASE_DIR: ${{ secrets.BASE_DIR }}
                  GOOGLE_APPLICATION_CREDENTIALS: $GITHUB_WORKSPACE/google-credentials.json
                  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  MONGO_URI: ${{ secrets.MONGO_URI }}
                  PROXY_AUTH: ${{ secrets.PROXY_AUTH }}
                  JWT_USER_ID: ${{ secrets.JWT_USER_ID }}
                  JWT_TOKEN: ${{ secrets.JWT_TOKEN }}

            - name: Run Python script rw/main.py
              run: |
                  python3 rw/main.py
              env:
                  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
                  BASE_DIR: ${{ secrets.BASE_DIR }}
                  GOOGLE_APPLICATION_CREDENTIALS: $GITHUB_WORKSPACE/google-credentials.json
                  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  MONGO_URI: ${{ secrets.MONGO_URI }}
                  JWT_USER_ID: ${{ secrets.JWT_USER_ID }}
                  JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
                  PROXY_AUTH: ${{ secrets.PROXY_AUTH }}

            - name: Deploy to Firebase
              uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                  repoToken: ${{ secrets.GITHUB_TOKEN }}
                  firebaseServiceAccount: $GITHUB_WORKSPACE/firebase-key.json
                  channelId: live
                  projectId: auto-cryptoskopen-1 # Replace with your project ID
                  expires: 7d
                  entryPoint: ${{ secrets.BASE_DIR }}
